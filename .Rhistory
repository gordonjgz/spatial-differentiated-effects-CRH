??optim
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
library(stats)
install.packages("nleqslv")
library(nleqslv)
## Calibration
alpha_a = 0.2
alpha_n = 0.1
beta_t=0.3
theta=2.5
sigma=0.5
v_a = 1-0.7421349
n=334.11
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n : population densities
library(stats)
library(nleqslv)
fn <- function(x) {
C = (beta_t*(wage_rent_ratio^alpha_a* x[1] )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*x[2] )^(sigma-1) )^(1/(sigma-1))
ratio = (C)/ ((wage_rent_ratio)^alpha_a * x[1])
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * x[2])
return(c(ratio, mass_ratio))
}
nleqslv( c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))), fn)
fn2 <- function(x) crossprod(fn(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
optim(c(1, 1), fn2)
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1))
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
optim(c(1, 1), fn2)
optim(c(1, 1), fn2)$value
optim(c(1, 1), fn2)$`par`
c(z_a, z_n)=optim(c(1, 1), fn2)$`par`
optim(c(1, 1), fn2)$`par`[1]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1))
z_a = result[1]
z_n = result[2]
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1))
v_a = 1-0.8917659
n=335.8988
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
v_a = 1-0.7421349
n=334.11
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
v_a = 1-0.8917659
n=335.8988
alpha_a = 0.2
alpha_n = 0.1
beta_t=0.3
theta=2.5
sigma=0.5
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n : population densities
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
v_a = 0.0052094
n=334.11
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n : population densities
#C = (beta_t*(wage_rent_ratio^aplha_a* z_a)^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n)^(sigm
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
v_a = 0.0003096
n=335.8988
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n : population densiti
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
v_a = 1-0.7844961 # 1- non-trade share
n=589.0318
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n : population densities
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
v_a = 1-0.8917659
n=335.8988
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n
fn_star <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
fn2 <- function(x) crossprod(fn_star(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
## Test Run: Changde 2007
v_a = 1-0.8917659
n=335.8988
nleqslv( c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))), fn)
process <- function (v_a, n){
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n : population densities
fn2 <- function(x) crossprod(fn(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
return(c(z_a, z_n, u))
}
process(v_a, n)
process <- function (v_a, n){
rel_p_t=((1/beta_t)* (((1-alpha_n)*v_a)/ ((1-alpha_a)+(alpha_a-alpha_n)*v_a) ))^(1/(1-sigma)) # v_a : observed share of employment in agriculture
wage_rent_ratio=(1/n) * ( ((1-alpha_a)*(1-alpha_n)) /( alpha_n*(1-alpha_a) + (alpha_a-alpha_n)*v_a)) # n : population densities
fn2 <- function(x) crossprod(fn(x[1], x[2]) - c(rel_p_t, ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))))
result = optim(c(1, 1), fn2)$`par`
z_a = result[1]
z_n = result[2]
u = (beta_t*(wage_rent_ratio^alpha_a* z_a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*z_n )^(sigma-1) )^(1/(sigma-1)) #u universal utility
return(c(z_a, z_n, u))
}
process(v_a, n)
fn <- function(a, b) {
C = (beta_t*(wage_rent_ratio^alpha_a* a )^(sigma-1) + (1-beta_t)* (wage_rent_ratio^alpha_n*b )^(sigma-1) )^(1/(sigma-1)) #(17)
ratio = (C)/ ((wage_rent_ratio)^alpha_a * a)
mass_ratio = ((1-beta_t)/(1-beta_t*(1/rel_p_t)^(sigma-1)))^(1/(sigma-1))
mass_ratio = (C)/ ((wage_rent_ratio)^alpha_n * b)
return(c(ratio, mass_ratio))
}
process(v_a, n)
process(v_a, n)[1]
v_a = 1-0.7421349
n = 334.11
v_a_new = 1-0.8917659
n_new = 335.8988
result =process(v_a, n)
z_a = result[1]
z_n = result[2]
u = result[3]
result_new =process(v_a_new, n_new)
z_a_new = result_new[1]
z_n_new = result_new[2]
u_new = result_new[3]
u_diff = (u_new-u)/u
z_a_diff = (z_a_new - z_a)/z_a
z_n_diff = (z_n_new - z_n)/z_n
wage_rent_ratio_diff = ((1-alpha_n)*v_a * (u_diff-z_a_diff) +(1-alpha_a)*(1-v_a)*(u_diff - z_n_diff)) / ( alpha_a*(1-alpha_n)*v_a + alpha_n*(1-alpha_a)*(1-v_a))
rel_p_t_diff =((1-alpha_a)* (1-v_a)* (alpha_a*z_n_diff - alpha_n* z_a_diff - (alpha_a - alpha_n)*u_diff)) / (alpha_a * (1-alpha_n)* v_a + alpha_n * (1-alpha_a)* (1-v_a))
v_a_diff = (1+ (alpha_a-alpha_n)/(1-alpha_n)*v_a) * (1-sigma) * rel_p_t_diff
n_diff = ((alpha_a-alpha_n)*v_a)/(alpha_n*(1-alpha_a)+(alpha_a-alpha_n)*v_a)*v_a_diff - wage_rent_ratio_diff # model predicted
n_new_predict = n_diff*n+n
v_a_new = 1-0.7421349
n_new = 553.89
result =process(v_a, n)
z_a = result[1]
z_n = result[2]
u = result[3]
result_new =process(v_a_new, n_new)
z_a_new = result_new[1]
z_n_new = result_new[2]
u_new = result_new[3]
u_diff = (u_new-u)/u
z_a_diff = (z_a_new - z_a)/z_a
z_n_diff = (z_n_new - z_n)/z_n
wage_rent_ratio_diff = ((1-alpha_n)*v_a * (u_diff-z_a_diff) +(1-alpha_a)*(1-v_a)*(u_diff - z_n_diff)) / ( alpha_a*(1-alpha_n)*v_a + alpha_n*(1-alpha_a)*(1-v_a))
rel_p_t_diff =((1-alpha_a)* (1-v_a)* (alpha_a*z_n_diff - alpha_n* z_a_diff - (alpha_a - alpha_n)*u_diff)) / (alpha_a * (1-alpha_n)* v_a + alpha_n * (1-alpha_a)* (1-v_a))
v_a_diff = (1+ (alpha_a-alpha_n)/(1-alpha_n)*v_a) * (1-sigma) * rel_p_t_diff
n_diff = ((alpha_a-alpha_n)*v_a)/(alpha_n*(1-alpha_a)+(alpha_a-alpha_n)*v_a)*v_a_diff - wage_rent_ratio_diff # model predicted
n_new_predict = n_diff*n+n
v_a_new = 1-0.7354178
result =process(v_a, n)
z_a = result[1]
z_n = result[2]
u = result[3]
result_new =process(v_a_new, n_new)
z_a_new = result_new[1]
z_n_new = result_new[2]
u_new = result_new[3]
u_diff = (u_new-u)/u
z_a_diff = (z_a_new - z_a)/z_a
z_n_diff = (z_n_new - z_n)/z_n
wage_rent_ratio_diff = ((1-alpha_n)*v_a * (u_diff-z_a_diff) +(1-alpha_a)*(1-v_a)*(u_diff - z_n_diff)) / ( alpha_a*(1-alpha_n)*v_a + alpha_n*(1-alpha_a)*(1-v_a))
rel_p_t_diff =((1-alpha_a)* (1-v_a)* (alpha_a*z_n_diff - alpha_n* z_a_diff - (alpha_a - alpha_n)*u_diff)) / (alpha_a * (1-alpha_n)* v_a + alpha_n * (1-alpha_a)* (1-v_a))
v_a_diff = (1+ (alpha_a-alpha_n)/(1-alpha_n)*v_a) * (1-sigma) * rel_p_t_diff
n_diff = ((alpha_a-alpha_n)*v_a)/(alpha_n*(1-alpha_a)+(alpha_a-alpha_n)*v_a)*v_a_diff - wage_rent_ratio_diff # model predicted
n_new_predict = n_diff*n+n
v_a_new_predict = v_a_diff*v_a+v_a
